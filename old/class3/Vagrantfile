# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|
  config.vm.box = "bento/ubuntu-20.04"
  config.vm.box_check_update = false
  config.vm.synced_folder ".", "/vagrant" 
  config.ssh.username = "vagrant"
  config.ssh.password = "vagrant"
  config.trigger.before :up do |trigger|
    trigger.name = "Hello world"
    trigger.info = "I am running before vagrant up!!"
  end
 
  config.trigger.after :up do |trigger|
    trigger.name = "Hello world"
    trigger.info = "I am running after vagrant up!!"
  end
  
  config.vm.define "ApacheVM" do |web1|
    web1.vm.provider "virtualbox" do |vb1|
    vb1.name = "ApacheVM"
	vb1.gui = false
	vb1.memory = "1024"
	vb1.cpus = 1
    end
	web1.vm.hostname = "VagrVMApache"
	web1.vm.network "public_network"
	web1.vm.network "forwarded_port", guest: 80, host: 8080
	web1.vm.provision "shell", path: "provApache.sh"
  end
    config.vm.define "NgnixVM" do |web2|
    web2.vm.provider "virtualbox" do |vb2|
    vb2.name = "NgnixVM"
	vb2.gui = false
	vb2.memory = "1024"
	vb2.cpus = 1
    end
	web2.vm.hostname = "VagrVMNgnix"
	web2.vm.network "public_network"
	web2.vm.network "forwarded_port", guest: 80, host: 8000
	web2.vm.provision "shell", path: "provNgnix.sh"
  end
    config.vm.define "dbVM" do |db|
    db.vm.provider "virtualbox" do |vb3|
    vb3.name = "dbVM"
	vb3.gui = false
	vb3.memory = "1024"
	vb3.cpus = 1
    end
	db.vm.hostname = "VagrVMdb"
	db.vm.network "public_network"
	db.vm.network "forwarded_port", guest: 3306, host: 33060
	db.vm.provision "shell", path: "provdb.sh"
  end
end
