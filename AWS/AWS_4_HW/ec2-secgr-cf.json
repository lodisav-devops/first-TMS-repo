{
    "AWSTemplateFormatVersion" : "2010-09-09",
  
    "Description" : "AWS CloudFormation Sample Template EC2InstanceWithSecurityGroupSample: Create an Amazon EC2 instance running the Linux AMI. This example creates an EC2 security group for the instance to give you SSH, HTTP, HTTPS access. This template create Free Teer EC2Instances.",
  
    "Parameters" : {
      "KeyName": {
        "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the instance",
        "Type": "AWS::EC2::KeyPair::KeyName",
        "ConstraintDescription" : "must be the name of an existing EC2 KeyPair."
      },

      "InstanceName" : {
        "Description" : "Name of the instance",
        "Type": "String",
        "ConstraintDescription" : "must be the name of instance."
      },

      "ImageId" : {
        "Description" : "Server EC2 instance image Id",
        "Type" : "String",
        "Default" : "ami-0a261c0e5f51090b1",
        "AllowedValues" : [ "ami-0a261c0e5f51090b1", "ami-04a2b113b98bfa0e8", "ami-0087bd2f5c26af5ca", "ami-09c5ba4f838d8684a", "ami-06ce824c157700cd2" ]
  ,
        "ConstraintDescription" : "must be a valid EC2 image Id."
      },
  
      "InstanceType" : {
        "Description" : "Server EC2 instance type",
        "Type" : "String",
        "Default" : "t2.micro",
        "AllowedValues" : [ "t2.nano", "t2.micro", "t2.small", "t2.medium", "t2.large" ]
  ,
        "ConstraintDescription" : "must be a valid EC2 instance type."
      },
  
      "SSHLocation" : {
        "Description" : "The IP address range that can be used to SSH to the EC2 instances",
        "Type": "String",
        "MinLength": "9",
        "MaxLength": "18",
        "Default": "0.0.0.0/0",
        "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
        "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
      },

      "HTTPLocation" : {
        "Description" : "The IP address range that can be used to HTTP to the EC2 instances",
        "Type": "String",
        "MinLength": "9",
        "MaxLength": "18",
        "Default": "0.0.0.0/0",
        "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
        "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
      },

      "HTTPSLocation" : {
        "Description" : "The IP address range that can be used to HTTPS to the EC2 instances",
        "Type": "String",
        "MinLength": "9",
        "MaxLength": "18",
        "Default": "0.0.0.0/0",
        "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
        "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
      }
    },
      
    "Resources" : {
      "EC2Instance" : {
        "Type" : "AWS::EC2::Instance",
        "Properties" : {
          "InstanceType" : { "Ref" : "InstanceType" },
          "SecurityGroups" : [ { "Ref" : "InstanceSecurityGroup" } ],
          "KeyName" : { "Ref" : "KeyName" },
          "ImageId" : { "Ref" : "ImageId" },
          "Tags" : [ {
            "Key" : "Name",
            "Value" : { "Ref" : "InstanceName"}
            } ],
          "UserData" : { "Fn::Base64" : "#!/bin/bash\nyum update -y\nyum install -y git" }          
        }
      },
  
      "InstanceSecurityGroup" : {
        "Type" : "AWS::EC2::SecurityGroup",
        "Properties" : {
          "GroupDescription" : "Enable SSH, HTTP, HTTPS access via ports 22, 80, 443 respectively",
          "SecurityGroupIngress" : [            
            {
            "IpProtocol" : "tcp",
            "FromPort" : "22",
            "ToPort" : "22",
            "CidrIp" : { "Ref" : "SSHLocation"}
            },
            {
              "IpProtocol" : "tcp",
              "FromPort" : "80",
              "ToPort" : "80",
              "CidrIp" : { "Ref" : "HTTPLocation"}
            },
            {
              "IpProtocol" : "tcp",
              "FromPort" : "443",
              "ToPort" : "443",
              "CidrIp" : { "Ref" : "HTTPSLocation"}
            }
          ]
        }
      }
    },
  
    "Outputs" : {
      "InstanceId" : {
        "Description" : "InstanceId of the newly created EC2 instance",
        "Value" : { "Ref" : "EC2Instance" }
      },
      "AZ" : {
        "Description" : "Availability Zone of the newly created EC2 instance",
        "Value" : { "Fn::GetAtt" : [ "EC2Instance", "AvailabilityZone" ] }
      },
      "PublicDNS" : {
        "Description" : "Public DNSName of the newly created EC2 instance",
        "Value" : { "Fn::GetAtt" : [ "EC2Instance", "PublicDnsName" ] }
      },
      "PublicIP" : {
        "Description" : "Public IP address of the newly created EC2 instance",
        "Value" : { "Fn::GetAtt" : [ "EC2Instance", "PublicIp" ] }
      }
    }
  }
